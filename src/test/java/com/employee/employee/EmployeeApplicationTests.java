package com.employee.employee;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotEquals;
import static org.junit.Assert.assertNotNull;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import com.employee.employee.entity.Employee;
import com.employee.employee.repository.EmployeeRepository;

@SpringBootTest
class EmployeeApplicationTests {
	 @Autowired
	 EmployeeRepository employeeRepository;
	@Test
	public void testCreate() {
		try {
		Employee e = new Employee();
		e.setEmployeeId(2345767);
		e.setFirstName("Anil ");
		e.setMiddleName("K");
		e.setLastName("kumar");
		e.setEmailId("Anil@gmail.com");
		e.setPhoneNo("9874563245");
		e.setDesignation("Trainee");
		employeeRepository.save(e);
		assertNotNull(employeeRepository.findById(2483766).get());
		}catch(Exception e) {
			e.printStackTrace();
		}
		
		}
	
	@Test
	public void testReadAll() {
		List<Employee> list = employeeRepository.findAll();
		assertThat(list).size().isGreaterThan(0);
		
	}
	
	@Test
	public void testSingleData() {		
		try {
			Employee e = employeeRepository.findById(2345656).get();
		assertEquals("Sita ", e.getFirstName());
		}catch(Exception e) {
			System.out.println("Invalid first name");
		}
		
	}
	@Test
	public void testUpdate() {
		Employee e = employeeRepository.findById(2345656).get();
		e.setDesignation("System Engineer");
		employeeRepository.save(e);
		assertNotEquals("Trainee",employeeRepository.findById(2345656).get().getDesignation());
	}
	@Test
	public void testDeleteNegativeCase() {
		try {
		employeeRepository.deleteById(2087893);
		assertThat(employeeRepository.existsById(2087893)).isFalse();
	}catch(Exception e) {
//		e.printStackTrace();
		System.out.println("Invalid employee id");
	}
		}
	
	@Test
	public void testDeletePositiveCase() {
		try {
		employeeRepository.deleteById(2087898);
		assertThat(employeeRepository.existsById(2087898)).isFalse();
	}catch(Exception e) {
		System.out.println("Invalid employee id");
	}
		}
}


//Schema.sql
//
//CREATE TABLE employee_record 
//(
//	Employee_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
//	First_Name  VARCHAR(255),
//	Middle_Name  VARCHAR(255),
//	Last_Name  VARCHAR(255),
//	emailid    VARCHAR(255),
//	Phone_No   VARCHAR(255),
//	designation VARCHAR(255),
//	PRIMARY KEY (Employee_ID)
//	);
//
//
//data.sql
//
//INSERT INTO employee_record(Employee_ID,First_Name, Middle_Name, Last_Name, emailid,Phone_No,designation)
//VALUES (2345656,'Sita ','h ','Mahalakshmi','sita@gmail.com','8976587654','Trainee');
//
//INSERT INTO employee_record(Employee_ID,First_Name, Middle_Name, Last_Name, emailid,Phone_No,designation)
//VALUES (2087898,'Ravi ',' k','Ram','ravi12@gmail.com','8966587654','System Engineer');
//

























